<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="com.kakaopay.project.api.investment.mapper.ProductMapper">
    <select id="selectProductList" resultType="com.kakaopay.project.api.investment.dto.ProductSearchDto">
        <![CDATA[
        SELECT
            b.product_id
            , b.title
            , b.product_type
            , b.total_investing_amount
            , b.started_at
            , b.finished_at
            , b.created_time
            , b.modified_time
            , b.admin_no
            , b.investor_count
            , b.now_investing_amount
            , (CASE WHEN total_investing_amount <= now_investing_amount THEN 'FINISHED'
               ELSE 'RECRUITING' END) AS investment_recruitment_status
            FROM  (
                SELECT
                    tp.product_id
                    , tp.title
                    , tp.product_type
                    , tp.total_investing_amount
                    , tp.started_at
                    , tp.finished_at
                    , tp.created_time
                    , tp.modified_time
                    , tp.admin_no
                    , count(ti.investor_no) as investor_count
                    , COALESCE(sum(tpi.invested_amount), 0) as now_investing_amount
                FROM tb_product tp
                LEFT OUTER JOIN tb_product_invest tpi ON tp.product_id = tpi.product_id
                LEFT OUTER JOIN tb_investor ti ON ti.investor_no = tpi.investor_no
                WHERE now() BETWEEN started_at AND finished_at
                group by
                    tp.product_id
                    , tp.title
                    , tp.product_type
                    , tp.total_investing_amount
                    , tp.started_at
                    , tp.finished_at
                    , tp.created_time
                    , tp.modified_time
                    , tp.admin_no
        ) AS b
        ]]>
    </select>

    <select id="selectProductById" parameterType="long"
            resultType="com.kakaopay.project.api.investment.dto.ProductSearchDto">
        <![CDATA[
        SELECT
            b.product_id
            , b.title
            , b.product_type
            , b.total_investing_amount
            , b.started_at
            , b.finished_at
            , b.created_time
            , b.modified_time
            , b.admin_no
            , b.investor_count
            , b.now_investing_amount
            , (CASE WHEN total_investing_amount <= now_investing_amount THEN 'FINISHED'
              ELSE 'RECRUITING' END) AS investment_recruitment_status
        FROM  (
        SELECT
            tp.product_id
            , tp.title
            , tp.product_type
            , tp.total_investing_amount
            , tp.started_at
            , tp.finished_at
            , tp.created_time
            , tp.modified_time
            , tp.admin_no
            , count(ti.investor_no) as investor_count
            , COALESCE(sum(tpi.invested_amount), 0) as now_investing_amount
        FROM tb_product tp
        LEFT OUTER JOIN tb_product_invest tpi ON tp.product_id = tpi.product_id
        LEFT OUTER JOIN tb_investor ti ON ti.investor_no = tpi.investor_no
        WHERE tp.product_id = #{productId}
        group by
            tp.product_id
            , tp.title
            , tp.product_type
            , tp.total_investing_amount
            , tp.started_at
            , tp.finished_at
            , tp.created_time
            , tp.modified_time
            , tp.admin_no
        ) AS b
        ]]>
    </select>

    <delete id="deleteProduct" parameterType="com.kakaopay.project.api.investment.dto.ProductDto">
        DELETE FROM tb_product WHERE product_id = #{productId} and started_at > now()
    </delete>

    <update id="updateProduct" parameterType="com.kakaopay.project.api.investment.dto.ProductDto">
        UPDATE tb_product
        SET title = #{title}
        , total_investing_amount = #{totalInvestingAmount}
        , started_at = #{startedAt}
        , finished_at = #{finishedAt}
        , modified_time = now()
        WHERE product_id = #{productId} and started_at > now()
    </update>

    <insert id="insertProduct" parameterType="com.kakaopay.project.api.investment.dto.ProductDto">
        INSERT INTO tb_product
            (title, product_type, total_investing_amount, started_at, finished_at, created_time, modified_time, admin_no)
        VALUES
            (#{title}, #{productType}, #{totalInvestingAmount}, #{startedAt}, #{finishedAt}, now(), now(), #{adminNo})
    </insert>

    <select id="selectProductCount" resultType="int">
        SELECT count(product_id) FROM tb_product
    </select>
</mapper>